@model FCmsManager.ViewModel.ContentEditorViewModel


<h2>Filters</h2>
<form method="post" action="/fcmsmanager/contenteditor">
    <input type="hidden" name="numbderoffilters" id="numbderoffilters" value="@Model.GlobalFilters.Count()" />
    <input type="hidden" name="RepositoryId" value="@Model.RepositoryId" />
    <div id="cmsfilterlist" class="cmsfilterlist row" data-repositoryid="@Model.RepositoryId">
        <div class="col-md-12" data-object="filters-list">
            @foreach (var contentFilter in Model.ContentFilters)
            {
                await Html.RenderPartialAsync("Filter" + contentFilter.ContentFilter.Filter.Type.ToString(), contentFilter);
                <div class="cmsfiltervalue" data-index="@contentFilter.Index">
                    <input type="radio" name="contentfiltertype@(contentFilter.Index)" value="@((int)IContentFilter.ContentFilterType.Include)" @if (contentFilter.ContentFilter.FilterType == IContentFilter.ContentFilterType.Include) { <text> checked="checked" </text> } /> Include
                    <input type="radio" name="contentfiltertype@(contentFilter.Index)" value="@((int)IContentFilter.ContentFilterType.Exclude)" @if (contentFilter.ContentFilter.FilterType == IContentFilter.ContentFilterType.Exclude) { <text> checked="checked" </text> } /> Exclude
                </div>
                <hr />
            }
        </div>
        <did class="col-md-8">
            <select class="form-control" data-object="filter-select">
                <option value="">Select Filter to add</option>
                @foreach (SelectListItem item in Model.GlobalFilters)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </did>
        <did class="col-md-4"><a href="javascript:void(0)" data-object="addfilterbutton" class="cmsbutton">Add filter</a></did>
    </div>
    <div class="cmscontrols">
        <button class="cmsbutton">Apply filters</button>
    </div>
</form>

<hr />


<form method="post" action="/fcmsmanager/contenteditor/save">
    <input type="hidden" name="RepositoryId" value="@Model.RepositoryId" />


    <h1>Content</h1>
    @foreach (var definition in Model.ContentDefinitions)
    {
        @if (definition is FolderContentDefinition)
        {
            @foreach (var contentItem in Model.ContentItems.Where(m => m.DefinitionId == definition.DefinitionId))
            {
                <div class="cmsrepository cmseditsection@(definition.GetTypeName().ToLower())">
                    <h2>@definition.Name</h2>
                    @Html.Partial(definition.GetTypeName() + "View", new Tuple<IContent, IContentDefinition>(contentItem, definition))
                    <a class="cmsbutton" href="/fcmsmanager/content/edit?repositoryid=@(Model.RepositoryId)&contentid=@(contentItem.Id)">Edit</a>
                </div>
            }
            <div class="cmscontrols cmssecondcontrols">
                <a class="cmsbutton" href="/fcmsmanager/content/add?repositoryid=@(Model.RepositoryId)&definitionid=@(definition.DefinitionId)">Add @definition.Name</a>
            </div>
            <hr />
        }
        else
        {
            <span class="cmsright"><a href="/fcmsmanager/content/list?repositoryid=@Model.RepositoryId&definitionid=@definition.DefinitionId">List all versions</a></span>
            @Html.Partial(definition.GetTypeName() + "Editor", new Tuple<IContent, IContentDefinition>(Model.ContentItems.FirstOrDefault(m => m.DefinitionId == definition.DefinitionId), definition))
        }
    }
    <div class="cmscontrols">
        <button class="cmsbutton">Save</button>
    </div>
</form>


@section Breadcrump {
    <span><a href="/fcmsmanager/repository">Content</a>: @Model.RepositoryName</span>
}

@section Scripts {
    <script src="~/_content/FCmsManager/js/cms/ContentEditor.js"></script>
}
